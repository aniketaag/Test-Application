package com.evolent.dao;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.simple.SimpleJdbcInsert;

public class UserDaoImpl implements UserDao {
	private JdbcTemplate jdbcTemplate;
	
	public void setJdbcTemplate(JdbcTemplate jdbcTemplate) {
		this.jdbcTemplate = jdbcTemplate;
	}
	
	
	public int save(User user) {
		SimpleJdbcInsert simpleJdbcInsert = new SimpleJdbcInsert(jdbcTemplate);
		simpleJdbcInsert.withTableName("user").usingGeneratedKeyColumns("id");
		Map<String, Object> parameters = new HashMap<String, Object>(5);
		parameters.put("first_name", user.getFirstName());
		parameters.put("last_name", user.getLastName());
		parameters.put("email", user.getEmail());
		parameters.put("phone_number", user.getPhoneNumber());
		parameters.put("status", user.getStatus());
		Number insertedId = simpleJdbcInsert.executeAndReturnKey(parameters);
		return insertedId.intValue();
	}

	
	public List<User> getAll() {
		List<User> user = (List<User>) jdbcTemplate.query("select * from user", new UserRowMapper());
		return user;
	}

	
	public int delete(int id) {
		int resp = jdbcTemplate.update("delete from user where id = ?", id);
		return resp;
	}

	
	public int deleteAll() {
		int resp = jdbcTemplate.update("delete from user");
		return resp;
	}
	
	
	public User get(int id) {
		User user = (User) jdbcTemplate.queryForObject("select * from user where id = ?", new Object[] { id }, new UserRowMapper());
		return user;
	}

}
